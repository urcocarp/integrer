{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NOTEBOOK\\\\Desktop\\\\FT-M2\\\\06-React-Intro\\\\homework\\\\02 - Integration\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s2 = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { addFav, removeFav } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport style from \"./Card.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    id,\n    name,\n    origin,\n    image,\n    onClose,\n    addFav,\n    removeFav,\n    myFavorites\n  } = _ref;\n  const [isFav, SetIsFav] = useState(false);\n  const handleFavorite = () => {\n    _s();\n    if (isFav) {\n      SetIsFav(false);\n      removeFav(id);\n    } else {\n      SetIsFav(true);\n      addFav({\n        id,\n        name,\n        origin,\n        image,\n        onClose\n      });\n    }\n    useEffect(() => {\n      myFavorites.forEach(fav => {\n        if (fav.id === id) {\n          setIsFav(true);\n        }\n      });\n    }, [myFavorites]);\n  };\n  _s(handleFavorite, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavorite,\n      children: \"\\uD83E\\uDD0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClose(id),\n      className: style.closeButton,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"\",\n      className: style.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/Detail/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: origin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s2(Card, \"rtB99XsDsRyIpUb9ybv7uVhzf44=\");\n_c = Card;\nconst mapStateToProps = state => {\n  myFavorites: state.myFavorites;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFav: characters => {\n      dispatch(addFav(characters));\n    },\n    removeFav: id => {\n      dispatch(removeFav(id));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Link","addFav","removeFav","connect","style","useState","useEffect","jsxDEV","_jsxDEV","Card","_ref","_s2","_s","$RefreshSig$","id","name","origin","image","onClose","myFavorites","isFav","SetIsFav","handleFavorite","forEach","fav","setIsFav","className","container","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","src","alt","to","_c","mapStateToProps","state","mapDispatchToProps","dispatch","characters","$RefreshReg$"],"sources":["C:/Users/NOTEBOOK/Desktop/FT-M2/06-React-Intro/homework/02 - Integration/src/components/Card/Card.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { addFav, removeFav } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport style from \"./Card.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n function Card({id,name,origin,image,onClose, addFav, removeFav, myFavorites}) {\r\n   const[isFav, SetIsFav]= useState(false)\r\n\r\n   const handleFavorite=()=>{\r\n      if(isFav){\r\n         SetIsFav(false);\r\n         removeFav(id)\r\n      }\r\n      else{\r\n         SetIsFav(true)\r\n         addFav({id,name,origin,image,onClose})\r\n      }\r\n      useEffect(() => {\r\n         myFavorites.forEach((fav) => {\r\n            if (fav.id === id) {\r\n               setIsFav(true);\r\n            }\r\n         });\r\n      }, [myFavorites]);\r\n   }\r\n   return (\r\n      <div className={style.container}>\r\n         {\r\n            isFav ? (\r\n              <button onClick={handleFavorite}>‚ù§Ô∏è</button>\r\n                   ) : (\r\n              <button onClick={handleFavorite}>ü§ç</button>\r\n              )\r\n}\r\n         <button onClick={() => onClose(id)} className={style.closeButton}>X</button>\r\n         <img src={image} alt=''className={style.image}/>\r\n         \r\n         <Link to={`/Detail/${id}`}>\r\n         <h2>{name}</h2>\r\n         </Link>\r\n\r\n         <h2>{origin}</h2>\r\n      </div>\r\n   );\r\n}\r\nconst mapStateToProps=(state)=>{\r\n   myFavorites: state.myFavorites\r\n\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n   return {\r\n      addFav:(characters)=>{dispatch(addFav(characters))},\r\n      removeFav:(id)=>{dispatch(removeFav(id))}\r\n   }\r\n}\r\n \r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(Card)"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,EAAEC,SAAS,QAAQ,qBAAqB;AACvD,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,IAAIA,CAAAC,IAAA,EAAiE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,IAAhE;IAACC,EAAE;IAACC,IAAI;IAACC,MAAM;IAACC,KAAK;IAACC,OAAO;IAAEjB,MAAM;IAAEC,SAAS;IAAEiB;EAAW,CAAC,GAAAT,IAAA;EAC1E,MAAK,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAEhB,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMiB,cAAc,GAACA,CAAA,KAAI;IAAAV,EAAA;IACtB,IAAGQ,KAAK,EAAC;MACNC,QAAQ,CAAC,KAAK,CAAC;MACfnB,SAAS,CAACY,EAAE,CAAC;IAChB,CAAC,MACG;MACDO,QAAQ,CAAC,IAAI,CAAC;MACdpB,MAAM,CAAC;QAACa,EAAE;QAACC,IAAI;QAACC,MAAM;QAACC,KAAK;QAACC;MAAO,CAAC,CAAC;IACzC;IACAZ,SAAS,CAAC,MAAM;MACba,WAAW,CAACI,OAAO,CAAEC,GAAG,IAAK;QAC1B,IAAIA,GAAG,CAACV,EAAE,KAAKA,EAAE,EAAE;UAChBW,QAAQ,CAAC,IAAI,CAAC;QACjB;MACH,CAAC,CAAC;IACL,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EACpB,CAAC;EAAAP,EAAA,CAhBKU,cAAc;EAiBpB,oBACGd,OAAA;IAAKkB,SAAS,EAAEtB,KAAK,CAACuB,SAAU;IAAAC,QAAA,GAE1BR,KAAK,gBACHZ,OAAA;MAAQqB,OAAO,EAAEP,cAAe;MAAAM,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE5CzB,OAAA;MAAQqB,OAAO,EAAEP,cAAe;MAAAM,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1C,eAENzB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAACJ,EAAE,CAAE;MAACY,SAAS,EAAEtB,KAAK,CAAC8B,WAAY;MAAAN,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5EzB,OAAA;MAAK2B,GAAG,EAAElB,KAAM;MAACmB,GAAG,EAAC,EAAE;MAAAV,SAAS,EAAEtB,KAAK,CAACa;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEhDzB,OAAA,CAACR,IAAI;MAACqC,EAAE,EAAG,WAAUvB,EAAG,EAAE;MAAAc,QAAA,eAC1BpB,OAAA;QAAAoB,QAAA,EAAKb;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEPzB,OAAA;MAAAoB,QAAA,EAAKZ;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEZ;AAACtB,GAAA,CAvCSF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAwCd,MAAM8B,eAAe,GAAEC,KAAK,IAAG;EAC5BrB,WAAW,EAAEqB,KAAK,CAACrB,WAAW;AAEjC,CAAC;AAED,MAAMsB,kBAAkB,GAAEC,QAAQ,IAAG;EAClC,OAAO;IACJzC,MAAM,EAAE0C,UAAU,IAAG;MAACD,QAAQ,CAACzC,MAAM,CAAC0C,UAAU,CAAC,CAAC;IAAA,CAAC;IACnDzC,SAAS,EAAEY,EAAE,IAAG;MAAC4B,QAAQ,CAACxC,SAAS,CAACY,EAAE,CAAC,CAAC;IAAA;EAC3C,CAAC;AACJ,CAAC;AAKD,eAAeX,OAAO,CAACoC,eAAe,EAAEE,kBAAmB,CAAC,CAAChC,IAAI,CAAC;AAAA,IAAA6B,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}